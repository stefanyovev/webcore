<?php // that bitch

   function save(){ global $M;
      return file_put_contents( 'data/memory.php',
         '<?php return ' . var_export( $M, true ) . ' ?>' ); }

   function install(){ global $M; 
      if( !mkdir( 'data', 0777 ) ) die( 'CANNOT CREATE DIR' );      
      mkdir( 'data/data', 0777 ); mkdir( 'data/cache', 0777 ); $M =
      // --------------------------------------------------------------
      [dir, time => time(), title => untitled, descr => unknown,
         [file, name => 'wellcome',
            'sup yo']];
      // --------------------------------------------------------------
      save(); }

   function load(){ global $M;
      $M = (include('data/memory.php'));
      return $M !== FALSE; }
      
   function xml( & $x, $l=0 ){
      $p = str_repeat( ' ', 3 + $l*3 ) . '-->';
      $sol = ( $l ? $p : '      ' );
      $eol = ( $l ? '<!--' : '' ) . "\n";
      if( is_string( $x ) ) { echo $sol . $x . $eol; return; }
      $a = ''; foreach( $x as $k => $v ) if( $k && is_string( $k ) ) $a .= ' ' . $k . '="' . $v . '"';
      echo $sol . "<{$x[0]}$a";
      if( !isset( $x[1] ) ) echo " /><!--\n";
      else{ echo "><!--\n";
         for( $i=1; isset( $x[$i] ); $i++ ) xml( $x[$i], $l+1 );
         echo "$p</{$x[0]}>" . $eol; } }

   function & p( $x ){ global $M; $p = & $M; if( $x ){
      foreach( explode( '/', $x ) as $name ){ $found = false;
         for( $i=1; isset( $p[$i] ); $i++ ) if( isset( $p[$i][name] ) && $p[$i][name] == $name )
            { $p = & $p[$i]; $found = true; break; }
         if( !$found ) return NULL; } }
      return $p; }

   function place( $x ){
      // '' -> null, 'xx' -> ''
      if( strlen( $x ) < 2 || strstr( $x, '/' ) === false ) return '';
      return substr( $x, 0, -1-strlen( name( $x ) ) ); }

   function name( $x ){
      // substr($x, strrpos( $x, "/") + 1)
      // '' -> ''
      $t = ''; foreach( explode( '/', $x ) as $y ) $t = $y;
      return $t; }

   function newname( $x ){ $n = 1; $r = $x; while( p( $r ) ) $r = $x . ++$n;
      return $r; }

   function valid( $type, $data ){ switch( $type ){      
      case name: return $data && is_string( $data ) && $data[0] != '-' && $data[0] != '_' &&
         !preg_match( '/\A[0-9\-_]+\z/', $data ) && preg_match( '/\A[a-z0-9\-_]+\z/', $data ); }
      return false; }

   function esc( $type, $data ){ switch( $type ){
      case html: return htmlentities( $data, ENT_QUOTES, 'UTF-8' );
      case sql: return addslashes( $data ); } }

//######################################################################################################################################################################################

   session_start();

   $S = & $_SESSION; 
   $P = & $_POST;
   $E = & $_SERVER;
   $F = & $_FILES;

   header( 'Content-type: text/html; charset=UTF-8' );
   header( 'Cache-control: no-cache, no-store, must-revalidate' ); 
   header_remove( Pragma ); header_remove( Expires );
   
   //$www = 'www.' == strtolower( substr( $E[SERVER_NAME], 0, 4 ) );
   //if( !$E[HTTPS] || $www ){
   //   header( 'Location: https://' . substr( $E[SERVER_NAME], $www ? 4 : 0 ) . $E[REQUEST_URI] );
   //   exit; }
   //unset( $www );

   $home = trim( dirname( $E[PHP_SELF] ), '/' );
   $url = 'http' . ( $E[HTTPS] ? 's' : '' ) . '://' . $E[SERVER_NAME] . '/' . ( $home ? "$home/" : '' ); 
   $short = strstr( $E[HTTP_ACCEPT], 'text/plain' ) === false ? false : true;
   
   function redirect( $to = '' ){ global $url;
      header( 'Location: ' . $url . $to ); exit; }

   if( get_magic_quotes_gpc() ) array_map( stripslashes, $P );

   load() or install();
   
   $args = array_map( urldecode, explode( '/', substr( str_replace( "?{$E[QUERY_STRING]}", '', ltrim( $E[REQUEST_URI], '/' ) ), $home ? strlen( $home )+1 : 0 ) ) );
   if( $args[0] === '' ) array_shift( $args );
   $loc = '';
   $p = & $M; while( $args && isset( $p[$args[0]] ) && isset( $p[$args[0]][type] ) ){ $x = array_shift( $args ); $p = & $p[$x];
      $loc .= $loc ? "/$x" : $x; }
   $dir = $loc ? $loc : '.';
   $l1 = strstr( $loc, '/' ) === false;
   $a = array(); while( $args && $args[0] !== '' ) $a[] = array_shift( $args );      
      array_shift( $args );
   $q = array_shift( $args ); 
   
   xml( $M );
      
?>
